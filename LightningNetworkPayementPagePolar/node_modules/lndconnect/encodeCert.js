'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _base64url = require('base64url');

var _base64url2 = _interopRequireDefault(_base64url);

var _strictUriEncode = require('strict-uri-encode');

var _strictUriEncode2 = _interopRequireDefault(_strictUriEncode);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Encode a tls certificate as a base64 encoded url string.
 * @param  {String} certPath Path to vertificate file.
 * @return {String} Encoded certificate
 */
const encodeCert = (input, format = 'utf8') => {
  if (!input) {
    return '';
  }

  var cert = new Buffer.from(input, format).toString('utf8');

  let lines = cert.split(/[\r\n]+/);
  lines = lines.filter(line => line != '');

  // If its a cert, strip out the header and footer and bes64url encode it.
  if (lines[0] === '-----BEGIN CERTIFICATE-----') {
    lines.pop();
    lines.shift();
    return _base64url2.default.fromBase64(lines.join(''));
  }
  // Otherwise assume it is a filepath.
  return (0, _strictUriEncode2.default)(lines[0]);
};

exports.default = encodeCert;
module.exports = exports.default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9lbmNvZGVDZXJ0LmpzIl0sIm5hbWVzIjpbImVuY29kZUNlcnQiLCJpbnB1dCIsImZvcm1hdCIsImNlcnQiLCJCdWZmZXIiLCJmcm9tIiwidG9TdHJpbmciLCJsaW5lcyIsInNwbGl0IiwiZmlsdGVyIiwibGluZSIsInBvcCIsInNoaWZ0IiwiYmFzZTY0dXJsIiwiZnJvbUJhc2U2NCIsImpvaW4iXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOzs7O0FBQ0E7Ozs7OztBQUVBOzs7OztBQUtBLE1BQU1BLGFBQWEsQ0FBQ0MsS0FBRCxFQUFRQyxTQUFTLE1BQWpCLEtBQTRCO0FBQzdDLE1BQUksQ0FBQ0QsS0FBTCxFQUFZO0FBQ1YsV0FBTyxFQUFQO0FBQ0Q7O0FBRUQsTUFBSUUsT0FBTyxJQUFJQyxPQUFPQyxJQUFYLENBQWdCSixLQUFoQixFQUF1QkMsTUFBdkIsRUFBK0JJLFFBQS9CLENBQXdDLE1BQXhDLENBQVg7O0FBRUEsTUFBSUMsUUFBUUosS0FBS0ssS0FBTCxDQUFXLFNBQVgsQ0FBWjtBQUNBRCxVQUFRQSxNQUFNRSxNQUFOLENBQWFDLFFBQVFBLFFBQVEsRUFBN0IsQ0FBUjs7QUFFQTtBQUNBLE1BQUlILE1BQU0sQ0FBTixNQUFhLDZCQUFqQixFQUFnRDtBQUM5Q0EsVUFBTUksR0FBTjtBQUNBSixVQUFNSyxLQUFOO0FBQ0EsV0FBT0Msb0JBQVVDLFVBQVYsQ0FBcUJQLE1BQU1RLElBQU4sQ0FBVyxFQUFYLENBQXJCLENBQVA7QUFDRDtBQUNEO0FBQ0EsU0FBTywrQkFBZ0JSLE1BQU0sQ0FBTixDQUFoQixDQUFQO0FBQ0QsQ0FsQkQ7O2tCQW9CZVAsVSIsImZpbGUiOiJlbmNvZGVDZXJ0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGJhc2U2NHVybCBmcm9tICdiYXNlNjR1cmwnXG5pbXBvcnQgc3RyaWN0VXJpRW5jb2RlIGZyb20gJ3N0cmljdC11cmktZW5jb2RlJ1xuXG4vKipcbiAqIEVuY29kZSBhIHRscyBjZXJ0aWZpY2F0ZSBhcyBhIGJhc2U2NCBlbmNvZGVkIHVybCBzdHJpbmcuXG4gKiBAcGFyYW0gIHtTdHJpbmd9IGNlcnRQYXRoIFBhdGggdG8gdmVydGlmaWNhdGUgZmlsZS5cbiAqIEByZXR1cm4ge1N0cmluZ30gRW5jb2RlZCBjZXJ0aWZpY2F0ZVxuICovXG5jb25zdCBlbmNvZGVDZXJ0ID0gKGlucHV0LCBmb3JtYXQgPSAndXRmOCcpID0+IHtcbiAgaWYgKCFpbnB1dCkge1xuICAgIHJldHVybiAnJ1xuICB9XG5cbiAgdmFyIGNlcnQgPSBuZXcgQnVmZmVyLmZyb20oaW5wdXQsIGZvcm1hdCkudG9TdHJpbmcoJ3V0ZjgnKVxuXG4gIGxldCBsaW5lcyA9IGNlcnQuc3BsaXQoL1tcXHJcXG5dKy8pXG4gIGxpbmVzID0gbGluZXMuZmlsdGVyKGxpbmUgPT4gbGluZSAhPSAnJylcblxuICAvLyBJZiBpdHMgYSBjZXJ0LCBzdHJpcCBvdXQgdGhlIGhlYWRlciBhbmQgZm9vdGVyIGFuZCBiZXM2NHVybCBlbmNvZGUgaXQuXG4gIGlmIChsaW5lc1swXSA9PT0gJy0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLScpIHtcbiAgICBsaW5lcy5wb3AoKVxuICAgIGxpbmVzLnNoaWZ0KClcbiAgICByZXR1cm4gYmFzZTY0dXJsLmZyb21CYXNlNjQobGluZXMuam9pbignJykpXG4gIH1cbiAgLy8gT3RoZXJ3aXNlIGFzc3VtZSBpdCBpcyBhIGZpbGVwYXRoLlxuICByZXR1cm4gc3RyaWN0VXJpRW5jb2RlKGxpbmVzWzBdKVxufVxuXG5leHBvcnQgZGVmYXVsdCBlbmNvZGVDZXJ0XG4iXX0=