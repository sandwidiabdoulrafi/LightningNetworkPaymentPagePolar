'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _url = require('url');

var _url2 = _interopRequireDefault(_url);

var _querystring = require('querystring');

var _querystring2 = _interopRequireDefault(_querystring);

var _decodeCert = require('./decodeCert');

var _decodeCert2 = _interopRequireDefault(_decodeCert);

var _decodeMacaroon = require('./decodeMacaroon');

var _decodeMacaroon2 = _interopRequireDefault(_decodeMacaroon);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Decode an lndconnect url.
 * @param  {String} lndconnect url to decode.
 * @return {Object} Lnd connect data (object containing host, cert, and macaroon keys).
 */
const decode = (string = '') => {
  const res = {};
  const parsedUrl = _url2.default.parse(string);
  const parsedQuery = _querystring2.default.parse(parsedUrl.query);

  if (parsedUrl.protocol !== 'lndconnect:') {
    throw new Error('Invalid protocol');
  }

  return {
    host: parsedUrl.host || parsedQuery.host,
    cert: (0, _decodeCert2.default)(parsedQuery.cert),
    macaroon: (0, _decodeMacaroon2.default)(parsedQuery.macaroon)
  };
};

exports.default = decode;
module.exports = exports.default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9kZWNvZGUuanMiXSwibmFtZXMiOlsiZGVjb2RlIiwic3RyaW5nIiwicmVzIiwicGFyc2VkVXJsIiwidXJsIiwicGFyc2UiLCJwYXJzZWRRdWVyeSIsInF1ZXJ5c3RyaW5nIiwicXVlcnkiLCJwcm90b2NvbCIsIkVycm9yIiwiaG9zdCIsImNlcnQiLCJtYWNhcm9vbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7OztBQUVBOzs7OztBQUtBLE1BQU1BLFNBQVMsQ0FBQ0MsU0FBUyxFQUFWLEtBQWlCO0FBQzlCLFFBQU1DLE1BQU0sRUFBWjtBQUNBLFFBQU1DLFlBQVlDLGNBQUlDLEtBQUosQ0FBVUosTUFBVixDQUFsQjtBQUNBLFFBQU1LLGNBQWNDLHNCQUFZRixLQUFaLENBQWtCRixVQUFVSyxLQUE1QixDQUFwQjs7QUFFQSxNQUFJTCxVQUFVTSxRQUFWLEtBQXVCLGFBQTNCLEVBQTBDO0FBQ3hDLFVBQU0sSUFBSUMsS0FBSixDQUFVLGtCQUFWLENBQU47QUFDRDs7QUFFRCxTQUFPO0FBQ0xDLFVBQU1SLFVBQVVRLElBQVYsSUFBa0JMLFlBQVlLLElBRC9CO0FBRUxDLFVBQU0sMEJBQVdOLFlBQVlNLElBQXZCLENBRkQ7QUFHTEMsY0FBVSw4QkFBZVAsWUFBWU8sUUFBM0I7QUFITCxHQUFQO0FBS0QsQ0FkRDs7a0JBZ0JlYixNIiwiZmlsZSI6ImRlY29kZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB1cmwgZnJvbSAndXJsJ1xuaW1wb3J0IHF1ZXJ5c3RyaW5nIGZyb20gJ3F1ZXJ5c3RyaW5nJ1xuaW1wb3J0IGRlY29kZUNlcnQgZnJvbSAnLi9kZWNvZGVDZXJ0J1xuaW1wb3J0IGRlY29kZU1hY2Fyb29uIGZyb20gJy4vZGVjb2RlTWFjYXJvb24nXG5cbi8qKlxuICogRGVjb2RlIGFuIGxuZGNvbm5lY3QgdXJsLlxuICogQHBhcmFtICB7U3RyaW5nfSBsbmRjb25uZWN0IHVybCB0byBkZWNvZGUuXG4gKiBAcmV0dXJuIHtPYmplY3R9IExuZCBjb25uZWN0IGRhdGEgKG9iamVjdCBjb250YWluaW5nIGhvc3QsIGNlcnQsIGFuZCBtYWNhcm9vbiBrZXlzKS5cbiAqL1xuY29uc3QgZGVjb2RlID0gKHN0cmluZyA9ICcnKSA9PiB7XG4gIGNvbnN0IHJlcyA9IHt9XG4gIGNvbnN0IHBhcnNlZFVybCA9IHVybC5wYXJzZShzdHJpbmcpXG4gIGNvbnN0IHBhcnNlZFF1ZXJ5ID0gcXVlcnlzdHJpbmcucGFyc2UocGFyc2VkVXJsLnF1ZXJ5KVxuXG4gIGlmIChwYXJzZWRVcmwucHJvdG9jb2wgIT09ICdsbmRjb25uZWN0OicpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgcHJvdG9jb2wnKVxuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBob3N0OiBwYXJzZWRVcmwuaG9zdCB8fCBwYXJzZWRRdWVyeS5ob3N0LFxuICAgIGNlcnQ6IGRlY29kZUNlcnQocGFyc2VkUXVlcnkuY2VydCksXG4gICAgbWFjYXJvb246IGRlY29kZU1hY2Fyb29uKHBhcnNlZFF1ZXJ5Lm1hY2Fyb29uKSxcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBkZWNvZGVcbiJdfQ==